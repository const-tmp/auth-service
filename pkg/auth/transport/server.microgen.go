// Code generated by microgen 1.0.5. DO NOT EDIT.

package transport

import (
	auth "auth/pkg/auth"
	"context"
	endpoint "github.com/go-kit/kit/endpoint"
)

func Endpoints(svc auth.Service) EndpointsSet {
	return EndpointsSet{
		GetPermissionsForServiceEndpoint: GetPermissionsForServiceEndpoint(svc),
		LoginEndpoint:                    LoginEndpoint(svc),
		PublicKeyEndpoint:                PublicKeyEndpoint(svc),
		RegisterEndpoint:                 RegisterEndpoint(svc),
	}
}

func RegisterEndpoint(svc auth.Service) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		req := request.(*RegisterRequest)
		res0, res1 := svc.Register(arg0, req.Login, req.Password, req.Service, req.AccountId)
		return &RegisterResponse{Ok: res0}, res1
	}
}

func LoginEndpoint(svc auth.Service) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		req := request.(*LoginRequest)
		res0, res1 := svc.Login(arg0, req.Login, req.Password, req.Service)
		return &LoginResponse{Token: res0}, res1
	}
}

func PublicKeyEndpoint(svc auth.Service) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		res0, res1 := svc.PublicKey(arg0)
		return &PublicKeyResponse{Pub: res0}, res1
	}
}

func GetPermissionsForServiceEndpoint(svc auth.Service) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		req := request.(*GetPermissionsForServiceRequest)
		res0, res1 := svc.GetPermissionsForService(arg0, req.Name)
		return &GetPermissionsForServiceResponse{Permissions: res0}, res1
	}
}
