// Code generated by microgen 1.0.5. DO NOT EDIT.

// It is better for you if you do not change functions names!
// This file will never be overwritten.
package transportgrpc

import (
	"auth/pkg/access"
	pb "auth/pkg/auth/proto"
	types "auth/pkg/types"
)

func PtrTypesAccessTokenToProto(token *types.AccessToken) (*pb.AccessToken, error) {
	return &pb.AccessToken{AccessToken: token.AccessToken}, nil
}

func ProtoToPtrTypesAccessToken(protoToken *pb.AccessToken) (*types.AccessToken, error) {
	return &types.AccessToken{AccessToken: protoToken.AccessToken}, nil
}

func ListByteToProto(pub []byte) ([]byte, error) {
	return pub, nil
}

func ProtoToListByte(protoPub []byte) ([]byte, error) {
	return protoPub, nil
}

func ListPtrTypesPermissionToProto(permissions []*types.Permission) ([]*pb.Permission, error) {
	res := make([]*pb.Permission, 0, len(permissions))
	for _, permission := range permissions {
		res = append(res, &pb.Permission{
			Id:        permission.ID,
			Name:      permission.Name,
			Access:    uint64(permission.Access),
			ServiceId: permission.ServiceID,
		})
	}
	return res, nil
}

func ProtoToListPtrTypesPermission(protoPermissions []*pb.Permission) ([]*types.Permission, error) {
	res := make([]*types.Permission, 0, len(protoPermissions))
	for _, permission := range protoPermissions {
		res = append(res, &types.Permission{
			Model:     types.Model{ID: permission.Id},
			ServiceID: permission.ServiceId,
			Name:      permission.Name,
			Access:    access.Access(permission.Access),
		})
	}
	return res, nil
}
