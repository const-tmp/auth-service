syntax = "proto3";

option go_package = "./;proto";

package proto;

import "google/protobuf/empty.proto";

service Mgmt {
  rpc CreateUserWithLoginPassword (CreateUserWithLoginPasswordRequest) returns (CreateUserWithLoginPasswordResponse);
  rpc CreateUserWithTelegram (CreateUserWithTelegramRequest) returns (CreateUserWithTelegramResponse);
  rpc GetAllUsers (google.protobuf.Empty) returns (GetAllUsersResponse);
  rpc GetUser (GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);
  rpc BlockUser (BlockUserRequest) returns (BlockUserResponse);
  rpc UnblockUser (UnblockUserRequest) returns (UnblockUserResponse);
  rpc CreateService (CreateServiceRequest) returns (CreateServiceResponse);
  rpc GetAllServices (google.protobuf.Empty) returns (GetAllServicesResponse);
  rpc GetService (GetServiceRequest) returns (GetServiceResponse);
  rpc CreateAccount (google.protobuf.Empty) returns (CreateAccountResponse);
  rpc CreateAccountWithName (CreateAccountWithNameRequest) returns (CreateAccountWithNameResponse);
  rpc GetAllAccounts (google.protobuf.Empty) returns (GetAllAccountsResponse);
  rpc GetAccount (GetAccountRequest) returns (GetAccountResponse);
  rpc UpdateAccount (UpdateAccountRequest) returns (UpdateAccountResponse);
  rpc AttachUserToAccount (AttachUserToAccountRequest) returns (AttachUserToAccountResponse);
  rpc AttachAccountToService (AttachAccountToServiceRequest) returns (AttachAccountToServiceResponse);
  rpc RemoveAccountFromService (RemoveAccountFromServiceRequest) returns (RemoveAccountFromServiceResponse);
  rpc CreatePermission (CreatePermissionRequest) returns (CreatePermissionResponse);
  rpc GetPermission (GetPermissionRequest) returns (GetPermissionResponse);
  rpc GetAllPermission (google.protobuf.Empty) returns (GetAllPermissionResponse);
  rpc GetFilteredPermissions (GetFilteredPermissionsRequest) returns (GetFilteredPermissionsResponse);
  rpc DeletePermission (DeletePermissionRequest) returns (DeletePermissionResponse);
  rpc GetUserPermissions (GetUserPermissionsRequest) returns (GetUserPermissionsResponse);
  rpc AddUserPermission (AddUserPermissionRequest) returns (AddUserPermissionResponse);
  rpc RemoveUserPermission (RemoveUserPermissionRequest) returns (RemoveUserPermissionResponse);
}

message Service {
  uint32 id = 1;
  string name = 2;
  string code = 3;
}

message Account {
  uint32 id = 1;
  string name = 2;
  string code = 3;
}

message Permission {
  uint32 id = 1;
  string name = 2;
  uint64 access = 3;
  uint32 service_id = 4;
}

message Access {
  uint64 access = 1;
}

message User {
  uint32 id = 1;
  string code = 2;
  string name = 3;
  string tg_name = 4;
  uint64 tg_id = 5;
  string tg_username = 6;
  uint32 parent_id = 7;
  uint32 account_id = 8;
  bool blocked = 9;
}

message CreateUserWithLoginPasswordRequest {
  string login = 1;
  string pass = 2;
}

message CreateUserWithLoginPasswordResponse {
  User user = 1;
}

message CreateUserWithTelegramRequest {
  uint64 id = 1;
  string name = 2;
  string user_n = 3;
}

message CreateUserWithTelegramResponse {
  User user = 1;
}

message GetAllUsersRequest {}

message GetAllUsersResponse {
  repeated User users = 1;
}

message GetUserRequest {
  User user_req = 1;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  User user_req = 1;
}

message UpdateUserResponse {
  User user = 1;
}

//message UpdateMapUserRequest {
//  map<string, google.protobuf.Any> m = 1;
//}

message UpdateMapUserResponse {
  bool ok = 1;
}

message BlockUserRequest {
  uint32 user_id = 1;
}

message BlockUserResponse {
  bool ok = 1;
}

message UnblockUserRequest {
  uint32 user_id = 1;
}

message UnblockUserResponse {
  bool ok = 1;
}

message CreateServiceRequest {
  string name = 1;
}

message CreateServiceResponse {
  Service s = 1;
}

message GetAllServicesResponse {
  repeated Service ss = 1;
}

message GetServiceRequest {
  Service svc = 1;
}

message GetServiceResponse {
  Service s = 1;
}

message CreateAccountRequest {}

message CreateAccountResponse {
  Account a = 1;
}

message CreateAccountWithNameRequest {
  string name = 1;
}

message CreateAccountWithNameResponse {
  Account a = 1;
}

message GetAllServicesRequest{}

message GetAllAccountsRequest {}

message GetAllAccountsResponse {
  repeated Account as = 1;
}

message GetAccountRequest {
  Account acc = 1;
}

message GetAccountResponse {
  Account a = 1;
}

message UpdateAccountRequest {
  Account acc = 1;
}

message UpdateAccountResponse {
  Account a = 1;
}

//message UpdateMapAccountRequest {
//  map<string, google.protobuf.Any> m = 1;
//}

message UpdateMapAccountResponse {
  bool ok = 1;
}

message AttachUserToAccountRequest {
  uint32 user_id = 1;
  uint32 account_id = 2;
}

message AttachUserToAccountResponse {
  bool ok = 1;
}

message AttachAccountToServiceRequest {
  uint32 service_id = 1;
  uint32 account_id = 2;
}

message AttachAccountToServiceResponse {
  bool ok = 1;
}

message RemoveAccountFromServiceRequest {
  uint32 service_id = 1;
  uint32 account_id = 2;
}

message RemoveAccountFromServiceResponse {
  bool ok = 1;
}

message CreatePermissionRequest {
  uint32 service_id = 1;
  string name = 2;
  Access access = 3;
}

message CreatePermissionResponse {
  Permission p = 1;
}

message GetPermissionRequest {
  Permission p = 1;
}

message GetPermissionResponse {
  Permission perm = 1;
}

message GetAllPermissionRequest {}

message GetAllPermissionResponse {
  repeated Permission p = 1;
}

message GetFilteredPermissionsRequest {
  Permission p = 1;
}

message GetFilteredPermissionsResponse {
  repeated Permission perm = 1;
}

message DeletePermissionRequest {
  Permission p = 1;
}

message DeletePermissionResponse {
  bool ok = 1;
}

message GetUserPermissionsRequest {
  uint32 user_id = 1;
}

message GetUserPermissionsResponse {
  repeated Permission permissions = 1;
}

message AddUserPermissionRequest {
  Permission p = 1;
  uint32 user_id = 2;
}

message AddUserPermissionResponse {
  bool ok = 1;
}

message RemoveUserPermissionRequest {
  uint32 perm_id = 1;
  uint32 user_id = 2;
}

message RemoveUserPermissionResponse {
  bool ok = 1;
}
